# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    paths:
      - 'Application/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'Application/**'

env:
  working-directory: ./Application/src/RazorPagesTestSample
  registryName: vswthdevopsreg.azurecr.io
  repositoryName: wth/dotnetcoreapp
  dockerFolderPath: Application/src/RazorPagesTestSample.
  tag: 0.0.1

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      issues: write

    steps:
    - uses: actions/checkout@v3
    - name: Move to Application folder
      run: cd ./Application/src/RazorPagesTestSample
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.working-directory }}
    - name: Build
      run: dotnet build --no-restore
      working-directory: ${{ env.working-directory }}
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ${{ env.working-directory }}
    - name: Job error
      uses: actions/github-script@v6
      id: error-script
      if: failure()
      with:
        result-encoding: string
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Error in .NET run"
          })

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registryName }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      -
        name: Docker Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./Application/src/RazorPagesTestSample/
          tags: ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}